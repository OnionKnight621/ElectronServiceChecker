import { app, BrowserWindow, ipcMain } from "electron";

import { API_CHANNELS } from "./constants";
import checkUri from "./handlers/checkUri";
import getChromePath from "./handlers/getChromePath";
import getTxtFile from "./handlers/getTxtFile";
import startBrowser from "./handlers/startBrowser";

// This allows TypeScript to pick up the magic constant that's auto-generated by Forge's Webpack plugin that tells
// the Electron app where to look for the Webpack-bundled app code (depending on whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

let mainWindow: BrowserWindow;

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require("electron-squirrel-startup")) {
  // eslint-disable-line global-require
  app.quit();
}

const createWindow = (): void => {
  mainWindow = new BrowserWindow({
    height: 1000,
    width: 1300,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
      nodeIntegration: true,
    },
  });

  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  mainWindow.webContents.openDevTools();
};

app.on("ready", createWindow);

ipcMain.on(API_CHANNELS.TRIGGER_GET_CHROME_PATH, () =>
  getChromePath(mainWindow)
);

ipcMain.on(API_CHANNELS.TRIGGER_GET_TXT_FILE, () => getTxtFile(mainWindow));

ipcMain.on(
  API_CHANNELS.TRIGGER_START_BROWSER,
  (e, { chromePath, instances, maxInstances, intevalID, accounts }) =>
    startBrowser(mainWindow, chromePath, instances, maxInstances, intevalID, accounts)
);

ipcMain.on(API_CHANNELS.TRIGGER_CHECK_URI, (e, { accountURI }) =>
  checkUri(mainWindow, accountURI)
);

// Quit when all windows are closed, except on macOS. There, it's common for applications and their menu bar to stay active until the user quits explicitly with Cmd + Q.
app.on("window-all-closed", () => {
  if (process.platform !== "darwin") {
    app.quit();
  }
});

app.on("activate", () => {
  // On OS X it's common to re-create a window in the app when the dock icon is clicked and there are no other windows open.
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});

// In this file you can include the rest of your app's specific main process code. You can also put them in separate files and import them here.
